{
  "reference": {
    "installation": "Please try to include details in your submissions for approval.",
    "links": [
      "https://github.com/Blade2021/HIVE-RefData",
      "https://hivedev.roots.systems/"
    ],
    "description": "Wanna help develop a database of helpful information for beginners starting out in the home automation field?  Help us grow the HIVE Reference Database by submitting commits/PRs to the link included.",
    "category": [
      "utilities"
    ]
  },
  "tasmota": {
    "alias": [
      "tasmoto"
    ],
    "installation": "To learn more about flashing tasmota onto your supported device, check out this article: https://tasmota.github.io/docs/Getting-Started/",
    "links": [
      "https://tasmota.github.io/docs/",
      "https://tasmota.github.io/docs/Getting-Started/",
      "https://tasmota.github.io/docs/Supported-Peripherals/",
      "https://thehackbox.org/tasmota/",
      "https://templates.blakadder.com/"
    ],
    "description": "Tasmota is a firmware that can be flashed onto ESP8266-based products created by Theo Arends.  It was originally used for Sonoff boards, but quickly snowballed to include all ESP8266 chips.  You can use it to control just about everything that you want (plugs, switches, dimmers, bulbs, et cetera).\n\nThe reason you'd load this firmware onto your devices is to keep your smart item traffic local to your premise, and not sending it to the cloud servers.  (So that when the internet goes out, the smartness of your things doesn't also).\n\nTasmota is 100% free and open source making it a great product for the home automation community.\n\nThe community submits configuration templates for devices to a site maintained by a user named Blakadder, so most things are pretty easy to configure.  If you run across a new product without a template, you will need to work out where things like LEDs, relays, and the like are by adjusting template settings manually -- but once you've got it, you can submit it to the repository!.\n\nBlakadder's team also maintains a 'naughty list' of devices that are not compatible.",
    "category": [
      "switching-applications"
    ]
  },
  "nodered": {
    "installation": "To learn how to install node-red check out this link: https://nodered.org/docs/getting-started/local",
    "links": [
      "https://bit.ly/2XkGZMi",
      "https://nodered.org/docs/getting-started/local",
      "http://www.steves-internet-guide.com/node-red-overview/",
      "http://www.steves-internet-guide.com/node-red-message-object/"
    ],
    "description": "Node-Red is a fantastic flow based visual tool for creating and linking automations and devices.  Node-Red works very well with Home-Assistant to provide a nice easy infrastructure for your wildest dreams.",
    "category": [
      "infrastructure"
    ]
  },
  "refTest": {
    "alias": [],
    "installation": "How does one install it?  A how to, a link to a article.",
    "links": [
      "https://google.com"
    ],
    "description": "A simple description of what 'IT' is\n\nTesting the {prefix} function",
    "category": [
      "switching-applications"
    ]
  },
  "ESP8266": {
    "alias": [
      "ESP-8266",
      "ESP8285",
      "AI-Thinker",
      "ESP-01",
      "Wemos",
      "D1",
      "Huzzah"
    ],
    "installation": "It should be known that some ESP chips do not come with soldered pins, So soldering may be required.",
    "links": [
      "https://www.espressif.com/en/products/socs/esp8266/overview",
      "https://en.wikipedia.org/wiki/ESP8266",
      "https://tinyurl.com/yal4c3a4",
      "https://tinyurl.com/yalstq77",
      "https://www.adafruit.com/product/2821",
      "https://www.sparkfun.com/products/13231"
    ],
    "description": "The ESP8266 is a microcontroller with built-in 2.4GHz Wifi (802.11b/g/n) made by a company called Espressif.  It comes in several flavors, each one with its own part number, but most people refer them collectively as 'ESP8266'.\n\nIt was originally designed and released as a wifi bridge to be used in conjunction with other microcontrollers and was initially released with only 8 pins exposed on a module known as an ESP-01.  It is super cheap, and when everyone realized that it was much more capable than being just a wifi bridge, people started using it in projects and products.  Espressif heard about what was being done with their chips and started releasing different modules with all of the pins exposed.\n\nThere aren't very many pins, though, and some of them are a bit... quirky to use.  But, because they're cheap, many smart home gadget companies started using them as the main chip in their products.  (Sonoff, Shelly, and Tuya being three you'll see thrown around in here.)\n\nGenerally, we only recommend the bare chips for advanced users who are designing their own circuit boards.  If you are looking to include one in your project, there are many options for pre-built development boards that have everything you'll need for a successful integration. Please see the links for board options.",
    "category": [
      "microcontroller"
    ]
  },
  "Zigbee": {
    "alias": [
      "conbee-2",
      "conbee"
    ],
    "installation": "Zigbee devices require a hub to communicate so be sure to have one ready!",
    "links": [
      "https://www.amazon.com/dresden-elektronik-ConBee-Universal-Gateway/dp/B07PZ7ZHG5/",
      "https://www.aliexpress.com/item/32865555473.html?",
      "https://www.youtube.com/watch?v=bVa6Yw1gCP0"
    ],
    "description": "OH THE ZIGBEE!\n\nZigbee is a communication protocol that has flourished in the home automation community.  Zigbee is often preferred to Wifi-based technologies due to its low power consumption and long battery life.  The downside to using zigbee is you need to have a HUB to communicate with all of your devices.  In some ways this is advantageous as it requires fewer devices connect to your wifi network.\n\nOne zigbee hub that has a high approval is the conbee 2.  It is not the cheapest option, but it is fairly easy to configure and always performs very well with devices.  Another great option is the Zigbee2MQTT hub which will relay zigbee data to your mqtt broker.  Whichever hub you select, be sure to verify that devices are supported by your hub before buying as most hubs do not support every device.\n\nIf nothing else, Zigbee is a very powerful protocol that opens the horizon to many types of sensors, switches, and other types of home automation devices.\n\n**CAUTION** Zigbee operates in the 2.4 GHz Spectrum, which is shared with Wifi, Bluetooth, Microwave Ovens, and some cordless telephones.  If you have a lot of 2.4 GHz present at your location, your Zigbee devices may be unreliable.",
    "category": [
      "infrastructure",
      "bridge",
      "utilities"
    ]
  },
  "ESP32": {
    "alias": [
      "ESP-32",
      "WROVER",
      "WROOM"
    ],
    "installation": "It should be known that some ESP chips do not come with soldered pins, So soldering may be required.",
    "links": [
      "https://www.espressif.com/en/products/socs/esp32/overview",
      "https://en.wikipedia.org/wiki/ESP32",
      "https://tinyurl.com/yb664res",
      "https://www.adafruit.com/product/3405",
      "https://www.sparkfun.com/products/13907"
    ],
    "description": "The ESP32 is a microcontroller with built-in 2.4GHz Wifi (802.11b/g/n) and Bluetooth (Classic and BLE) made by a company called Espressif.  It comes in several flavors, each one with its own part number, but most people refer them collectively as 'ESP32'.\n\nIt was created as a successor to the wildly popular ESP8266, and has many more pins and available on-board functions, such as Bluetooth, Capacitive Touch, Analog Pins (both ADC and DAC), PWM, I2C, I2S, SPI, and many others.  While they are more expensive than the ESP8266-based chips and boards, the ESP32 is still a good value for any projects requiring many inputs or outputs, bluetooth connectivity, or sensor integration.\n\nGenerally, we only recommend the bare chips for advanced users who are designing their own circuit boards.  If you are looking to include one in your project, there are many options for pre-built development boards that have everything you'll need for a successful integration.  Please see the links for board options.",
    "category": [
      "microcontroller"
    ]
  },
  "Tuya": {
    "alias": [
      "SmartLife"
    ],
    "installation": "Installation instructions vary from item to item.",
    "links": [
      "https://www.tuya.com/"
    ],
    "description": "Tuya is a company that makes a wide array of smart items including smart plugs, wall switches, and dimmers. Their main business is white-label manufacturing for other companies (be it just the chips, or the entire product), so you'll find Tuya devices sold under many different labels (Martin Jerry and Gosund are a couple).  Usually the product pages on retailer's websites will say that the devices work with Amazon's and Google's voice assistant platforms.\n\nSee also:  {prefix}TuyaConvert",
    "category": [
      "microcontroller",
      "infrastructure"
    ]
  },
  "TuyaConvert": {
    "installation": "To see instructions on getting started with Tuya Convert, please check out this link: https://github.com/ct-Open-Source/tuya-convert",
    "links": [
      "https://github.com/ct-Open-Source/tuya-convert",
      "https://youtu.be/dt5-iZc4_qU"
    ],
    "description": "Tuya Convert is a piece of free software that you can use to put (flash) new firmware onto a Tuya-type smart item 'Over the Air' (OTA).  This is terribly convenient, as you don't have to have any specialist equipment other than a Raspberry Pi or linux-based computer that has both Ethernet and Wifi.  Another reason to use Tuya Convert is a number of products are constructed in a way that prevents manual flashing with wires; they are not openable without actually destroying the product's housing.\n\nA digiblurdiy video explaining the process is in the links.",
    "category": [
      "utilities"
    ]
  },
  "NodeMCU": {
    "installation": "It should be known that some ESP chips do not come with soldered pins, So soldering may be required.",
    "links": [
      "https://en.wikipedia.org/wiki/NodeMCU",
      "https://tinyurl.com/yal4c3a4"
    ],
    "description": "NodeMCU is a popular development board that has an ESP8266 Module on it.  It has a USB port for both power and Serial-to-USB connectivity, as well as duplicate power pins.  It's convenient for adding multiple accessories to because you don't need to deal with splicing the power pins.  Product link is available in the links list.\n\nSee also: {prefix}ESP8266",
    "category": [
      "microcontroller"
    ]
  },
  "WLED": {
    "installation": "Check out this link to get started: https://github.com/Aircoookie/WLED/wiki",
    "links": [
      "https://github.com/Aircoookie/WLED/wiki"
    ],
    "description": "WLED is a firmware that can be loaded onto ESP8266 and ESP32 microcontrollers and is used to control lengths of connected addressable LEDs.  It has many built-in features, is compatible with Home Assistant via an integration, and with DMX-based Light Controller protocols.\n\nSee also: {prefix}NeoPixel",
    "category": [
      "lights",
      "applications"
    ]
  },
  "NeoPixel": {
    "alias": [
      "ws2811",
      "ws2812b",
      "ws2813",
      "ws2815",
      "sk9822",
      "sk9812",
      "apa106"
    ],
    "installation": "DrZzs has a lot of great videos!  Check out this one to get started: https://youtu.be/tXvtxwK3jRk",
    "links": [
      "https://youtu.be/tXvtxwK3jRk",
      "https://youtu.be/QnvircC22hU"
    ],
    "description": "Individually Addressable LEDs come in many varieties; you may find them referred to as NeoPixels, or by their part numbers, which include WS2811, WS2812b, WS2813, WS2815, SK9822, SK9812, or APA106.  You will need a microcontroller of some kind to run them; the most popular in the home automation space are the ESP8266 and ESP32 Boards.  Depending upon the length of your installation, you may also need to procure a high-amperage power supply and additional wire for power injection.\n\nSee also {prefix}WLED",
    "category": [
      "microcontroller"
    ]
  },
  "RF433": {
    "alias": [
      "RF315",
      "Bond",
      "RFBridge",
      "Slampher"
    ],
    "installation": "There is a lot of information on this subject.  Check out the links section and the Community can lead your journey here.",
    "links": [
      "https://bit.ly/DrZzsHow433Works",
      "https://bit.ly/DrZzsFlashRFBridgeTasmota",
      "https://youtu.be/OfSbIFIJPuc",
      "https://youtu.be/w_CchtI-oK0",
      "https://whatarewefixing.today/?p=134",
      "https://bit.ly/DrZzsRFBridgeMultiSensorSetup"
    ],
    "description": "The 433 mhz RF (radio frequency) band and the 315 mhz RF band, depending on the country you live in, is designated for the same purpose.  Low power rf transmitters are allowed to broadcast within these frequency ranges.  In the SmartHome / IOT world, these small transmitters are usually binary type sensors because only a small message is able to be transmitted during an event.  Door/Window sensors, PIR sensors, push button transmitters, remote controls and the like are the typical devices using these frequencies.  There needs to be a receiver nearby to pick up these signals and act on the message received.\n\nDevices such as the Itead RFBridge (http://drzzs.com/RF_Bridge) and the Bond Bridge (https://bit.ly/DrZzsBondBridge) act as central hubs to collect information from these sensors and feed the data back to a program such as Home Assistant for further action.  With some devices like the Itead Sonoff Slampher (https://bit.ly/DrZzsSlampher), the device can ‘pair’ with a matching RF transmitter bought separately and act on the information provided.  Devices are not tied to a common standard (like Zwave) which 1, keeps the price very low, but 2, causes incompatibility between manufacturers.",
    "category": [
      "microcontroller",
      "infrastructure"
    ]
  },
  "Pull-Request": {
    "alias": [
      "pr",
      "pullrequest"
    ],
    "installation": "No installation required.",
    "links": [
      "https://github.com/Blade2021/HIVE-RefData"
    ],
    "description": "A pull request is a part of GIT workflow.  Developers collaborate on pieces of a project then when ready to update the master file, they submit pull requests to allow other devlopers in most cases, to review, adjust, and then commit the changes to the master file.  This allows multiple developers to work simultaneously on the same project without conflict in most cases.\n\nWith the HIVE-References project, we are accepting submissions from anyone and everyone.  Be sure to check out repo in the links section.",
    "category": [
      "infrastructure"
    ]
  },
  "esphome": {
    "alias": [
      "esp-home"
    ],
    "installation": "ESPHome may be installed in Home Assistant as a supervisor add-on, or as a standalone installation.  Standalone install instructions can be found at https://esphome.io/guides/getting_started_command_line.html",
    "links": [
      "https://esphome.io",
      "https://esphome.io/guides/getting_started_command_line.html"
    ],
    "description": "ESPHome provides a simple way to configure code to run on your (ESP8266 or ESP32 based) wireless devices.  These devices include the Sonoff range of wifi controllable products, along with many others.  The software is configured using YAML files with a very simple syntax.  Don't let that fool you though.  The resulting software can be very powerful, and can be used to set up devices for direct integration with Home Assistant without the need for an MQTT broker as with Tasmota.",
    "category": [
      "microcontroller",
      "infrastructure",
      "switching-applications"
    ]
  },
  "Deconz": {
    "alias": [],
    "installation": "Decponz and the Phoscon Web App can be installed in Docker, within Home Assistant as an addon, or can even be bought as part of a hardware solution preinstalled on a dedicated Raspberry Pi",
    "links": [
      "https: //phoscon.de/en/conbee/software"
    ],
    "description": "Deconz, by Phoscon (the makers of the ConbeeII Zigbee USB stick) is a central hub for the integration of Zigbee devices.  The default installation includes the Deconz app as well the Phsocon web app for controlling devices from a browser.  aWhile the software can be used as a standalone app it is also available as a Home Assistant Addon.  With the ConbeeII stick and Deconz, you can take control of any Hue devices you already have or add new ones without using a Hue hub.  The software also support the Phoscon RaspBee and RaspBee II Pi hat devices.",
    "category": [
      "bridge",
      "infrastructure",
      "switching-applications"
    ]
  },
  "MQTT": {
    "alias": [
      "Mosquitto"
    ],
    "installation": "To install MQTT with Home Assistant, Check out this link:  https://www.home-assistant.io/integrations/mqtt/",
    "links": [
      "http://mqtt.org/",
      "https://en.wikipedia.org/wiki/MQTT",
      "https://www.home-assistant.io/integrations/mqtt/",
      "http://mqtt-explorer.com/",
      "https://tinyurl.com/thehookupmqtt"
    ],
    "description": "MQTT, or Message Queuing Telemetry Transport, is a light-weight protocol used in many situations where small message size and/or low bandwidth usage are important.  It was developed by IBM in 1999, and was initially used to monitor oil pipeline sensors and communicate with statellites. It became very popular, and is used extensively in SCADA control systems and smarthome products.\n\nMQTT utilizes a central service called a Broker that can be installed on just about any computer or server.  Clients connect to the Broker to monitor and update various Topics.  Subscriber Clients connect to the Broker and monitor a Topic; Publisher Clients connect to the Broker and update a Topic's value.  A Client can fill either role or both.\n\nHome Assistant and other home automation packages fill both roles, as do most Wifi connected smart plugs and devices.\n\nThere are libraries available in many programming languages (e.g. Arduino and Python) which can be used in custom sensor applications.\n\nWhen troubleshooting MQTT issues, it is useful to us a utility such as MQTT Explorer.",
    "category": [
      "infrastructure",
      "applications",
      "utilities"
    ]
  },
  "Sonoff": {
    "installation": "Sonoff products are made in many form factors, and installation instructions differ between devices.  Consult the documentation that arrived with your device for more information.",
    "links": [
      "https://sonoff.tech/",
      "https://tinyurl.com/drzzs-sonoffbasic",
      "https://tinyurl.com/drzzs-sonoffmini",
      "https://tasmota.github.io/docs/devices/Sonoff-Basic/"
    ],
    "description": "Sonoff is a brand of smarthome products created by Itead.  They make a wide range of inexpensive smarthome gadgets, many are based upon the venerable ESP8266 microcontroller.\n\nSome of the most popular Sonoff producs are the Sonoff Basic and the Sonoff Mini, but they make a number of smaartplugs, wall switches, and in-wall controllable outlets.\n\nThe stock firmware uses an app called eWeLink, which integrates with Home Assistant.  If one does not wish to use the stock firmware, most of their products can be flashed with Tasmota, ESPHome, or other custom firmware.\n\n**CAUTION*\nMost Sonoff devices are used in conjunction with Mains voltages and can be very hazardous if mishandled. ",
    "category": [
      "microcontroller",
      "infrastructure"
    ]
  },
  "Shelly": {
    "installation": "Shelly products are made in many form factors, and installation instructions differ between devices.  Consult the documentation that arrived with your device for more information.",
    "links": [
      "https://shelly.cloud/",
      "https://tinyurl.com/drzzs-shellyone",
      "https://tinyurl.com/drzzs-shellyonepm",
      "https://tinyurl.com/drzzs-shellytwopointfive"
    ],
    "description": "Shelly is a European company that manufactures smart home automation products for use in almost every country, many of which are based upon the venerable ESP8266 microcontroller. Shelly's remote relay line-up consists of single, double, and quad relay options, some with and some without power monitoring.  They also manufacture various types of sensors, power monitoring modules, and RGBW LED controllers.\n\nThe stock firmware can be used with the Shelly app along with a HACS integration in Home Assistant, or it can be set up to use a local MQTT Server -- no flashing is required!  If one does not wish to use the stock firmware, most of their products can be flashed with Tasmota, ESPHome, or other custom firmware.\n\n**CAUTION**\nMost Shelly devices are used in conjunction with Mains voltages and can be very hazardous if mishandled.",
    "category": [
      "microcontroller",
      "infrastructure"
    ]
  },
  "SpinningButtonCard": {
    "alias": [
      "spinningcard",
      "spinningbutton",
      "spinning-button",
      "spinning-card"
    ],
    "installation": "Install the custom button card using HACS.",
    "links": [
      "https://github.com/custom-cards/button-card",
      "https://gist.github.com/Snipercaine/ddd8e57625f703958db7ba150ecb4be2"
    ],
    "description": "The spinning button is a very frequently asked for topic from the Doc.  Check out the links included for the source for the Lovelace configuration and download.  Please note the card is also available through HACS which would be a preferred method of installation.",
    "category": [
      "applications",
      "user-interface"
    ]
  }
}